use "../api.kaba"


class SampleConfig : PluginData
	int sam[]
	overwrite void reset()
		sam.clear()

class SampleSynthesizer : Synthesizer
	SampleConfig config
	overwrite void renderNote(BufferBox buf, Range r, float pitch, float volume)
		keep_notes = sample_rate * 3
		//plugin_context.track
		//buf.add(audio.sample[0].buf, r.offset, volume, 0)
		int n = pitch + 0.4
		if n < 0 or n >= config.sam.num
			return
		int nn = config.sam[n]
		if nn < 0 or nn >= audio.sample.num
			return
		Sample *s = audio.sample[nn]
		
		buf.add(s.buf, r.offset, volume, 0)
	
	overwrite ConfigPanel *createPanel()
		return new SamplePanel(self)

class SamplePanel : ConfigPanel
	SampleConfig *sc
	overwrite SampleSynthesizer *c
	void __init__(SampleSynthesizer *_s)
		super.__init__(_s)
		sc = &c.config
		addGrid("", 0, 0, 4, 8, "main_table")
		setTarget("main_table", 0)
		for int i, 0, 16
			addText(i, (i/8)*2, i%8, 0, 0, "")
			addComboBox("- leer -", 1+(i/8)*2, i%8, 0, 0, "sample"+i)
			int j = 1
			for s in audio.sample
				setString("sample"+i, s.name)
				if i < sc.sam.num
					if sc.sam[i] == j-1
						setInt("sample"+i, j)
				j ++
			eventM("sample"+i, self, &onChange)
		
	void onChange()
		int n = HuiGetEvent().id.substr(6, -1).int()
		if n < 0
			return
		if n >= sc.sam.num
			sc.sam.resize(n + 1)
		int m = getInt("")
		sc.sam[n] = m-1
		notify()
