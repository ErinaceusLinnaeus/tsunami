use "../api.kaba"


class SampleConfig : PluginData
	SampleRef *samples[]
	virtual void __delete__()
		reset()
	overwrite void reset()
		for s in samples
			if s
				delete s
		samples.clear()

class SampleSynthesizer : Synthesizer
	SampleConfig config
	overwrite void renderNote(BufferBox buf, Range r, float pitch, float volume)
		keep_notes = sample_rate * 3
		//plugin_context.track
		//buf.add(audio.sample[0].buf, r.offset, volume, 0)
		int n = pitch + 0.4
		if n < 0 or n >= config.samples.num
			return
		SampleRef *s = config.samples[n]
		if !s
			return
		
		buf.add(*s.buf, r.offset, volume, 0)
	
	overwrite ConfigPanel *createPanel()
		return new SamplePanel(self)

class SamplePanel : ConfigPanel
	SampleConfig *sc
	overwrite SampleSynthesizer *c
	void __init__(SampleSynthesizer *_s)
		super.__init__(_s)
		sc = &c.config
		addGrid("", 0, 0, 6, 6, "main_table")
		setTarget("main_table", 0)
		for int i, 0, 18
			addText(i, (i/6)*2, i%6, 0, 0, "")
			addComboBox("- leer -", 1+(i/6)*2, i%6, 0, 0, "sample"+i)
			for s in audio.sample
				setString("sample"+i, s.name)
			eventM("sample"+i, self, &onChange)
			
	overwrite void update()
		for int i, 0, 18
			setInt("sample"+i, 0)
			int j = 1
			for s in audio.sample
				if i < sc.samples.num
					if sc.samples[i]
						if sc.samples[i].origin == s
							setInt("sample"+i, j)
				j ++
		
	void onChange()
		int n = HuiGetEvent().id.substr(6, -1).int()
		if n < 0
			return
		if n >= sc.samples.num
			sc.samples.resize(n + 1)
		int m = getInt("")
		if sc.samples[n]
			delete sc.samples[n]
			sc.samples[n] = nil
		if m > 0
			sc.samples[n] = audio.sample[m-1].createRef()
		notify()
