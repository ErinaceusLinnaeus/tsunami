use "../api.kaba"
use "../tone.kaba"


class SampleConfig : PluginData
	SampleRef*[] samples
	virtual void __delete__()
		reset()
	overwrite void reset()
		for s in samples
			if s
				delete s
		samples.clear()

class SampleSynthesizer : Synthesizer
	SampleConfig config
	overwrite void render(BufferBox buf)
		keep_notes = sample_rate * 3
		//plugin_context.track
		//buf.add(audio.sample[0].buf, r.offset, volume, 0)
		int n = pitch + 0.4
		if n < 0 or n >= config.samples.num
			return
		SampleRef *s = config.samples[n]
		if !s
			return
		
		buf.add(*s.buf, r.offset, volume, 0)
	
	overwrite ConfigPanel *createPanel()
		return new SamplePanel(self)

class SamplePanel : ConfigPanel
	SampleConfig *sc
	overwrite SampleSynthesizer *c
	void __init__(SampleSynthesizer *_s)
		super.__init__(_s)
		sc = &c.config
		addListView("!width=300\\Note\\Sample", 0, 0, 0, 0, "list")
		event("list", &onSelect)

	overwrite void update()
		reset("list")
		for int i, 0, 128
			string name = ""
			if i < sc.samples.num
				if sc.samples[i]
					name = sc.samples[i].origin.name
			setString("list", pitch_name(i) + "\\" + name)
		
	void onSelect()
		int n = getInt("")
		if n < 0
			return
		if n >= sc.samples.num
			sc.samples.resize(n + 1)
		Sample *old = nil
		if sc.samples[n]
			old = sc.samples[n].origin
		Sample *s = SelectSample(self, audio, old)
		if s != old
			if sc.samples[n]
				delete sc.samples[n]
				sc.samples[n] = nil
			if s
				sc.samples[n] = s.createRef()
			notify()
