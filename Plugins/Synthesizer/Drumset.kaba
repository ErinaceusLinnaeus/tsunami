use "../api.kaba"
use "../tone.kaba"

class Drumset
	string name
	Song *a
	
	void load(Session* session)
		if a
			return
		a = new Song(session)
		Song *owner = session.song
		session.song = a
		string temp = session.storage.current_directory
		session.storage.load(a, AppDirectoryStatic + "Drumsets/" + name + ".nami")
		session.storage.current_directory = temp
		session.song = owner

class DrumList
	Drumset[] sets
	
	int find(string name)
		if name == "" and sets.num > 0
			return 0
		for s,i in sets
			if s.name == name
				return i
		return -1
		
	string[] getNames()
		string[] list
		for s in sets
			list.add(s.name)
		return list

	//string[] find_drumsets()
	void update()
		DirEntry[] list = DirSearch(AppDirectoryStatic + "Drumsets", "*.nami", false)
		for e in list
			string name = e.name.substr(0, -6)
			if find(name) >= 0
				continue
			Drumset s
			s.name = name
			s.a = nil
			sets.add(s)
	
	Song *get(Session* session, string name)
		update()
		int n = find(name)
		if n < 0
			if sets.num > 0
				n = 0
				session.w("Drumset not found: '" + name + "', using '" + sets[0].name + "' instead")
			else
				session.e("Drumset not found: '" + name + "' (none found)")
				return nil
		Drumset *s = &sets[n]
		s.load(session)
		return s.a

DrumList drumlist

class DrumsetConfig extends PluginData
	string name
	override void reset()
		name = ""

class DrumsetSynthesizer extends Synthesizer
	DrumsetConfig config
	Song *a
	Synthesizer *s
	override void __init__()
		a = nil
	override void on_config()
		a = drumlist.get(session, config.name)
		s = nil
		if a
			s = a.tracks[0].synth
		if s
			s.set_sample_rate(sample_rate)
			s.on_config()
	override void render(AudioBuffer buf)
		if !s
			return
		s.events = events
		s.render(buf)

	
	override ConfigPanel *create_panel()
		return new DrumsetPanel(self)

class DrumsetPanel extends ConfigPanel
	DrumsetConfig *sc
	override DrumsetSynthesizer *c
	override void __init__(DrumsetSynthesizer *_s)
		super.__init__(_s)
		sc = &c.config
		addGrid("", 0, 0, "grid")
		setTarget("grid")
		addLabel("Set", 0 ,0, "")
		addComboBox("", 1, 0, "sets")
		event("sets", &onSelect)

	override void update()
		reset("sets")
		string[] sets = drumlist.getNames()
		setString("sets", "  - Default -")
		setInt("sets", 0)
		for s,i in sets
			setString("sets", s)
			if s == sc.name
				setInt("sets", i+1)
		
	void onSelect()
		int n = getInt("")
		sc.name = ""
		if n > 0
			sc.name = drumlist.sets[n-1].name
		changed()
