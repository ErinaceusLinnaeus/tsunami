// Image = hui:zoom-in
// Title[Deutsch] = LautstÃ¤rke

use "../../api.kaba"


class Config extends PluginData
	float volume
	bool maximize
	
	override void reset()
		self.volume = 1

class Volume extends AudioEffect
	Config config

	override ConfigPanel *create_panel()
		return new VolumePanel(self)

	override void process(AudioBuffer buf)
		float factor = config.volume
		if config.maximize
			float max = 0
			for i in 0:buf.length
				if abs(buf.r[i]) > max
					max = abs(buf.r[i])
				if abs(buf.l[i]) > max
					max = abs(buf.l[i])
			factor = 1 / max
		for i in 0:buf.length
			buf.r[i] = clamp(buf.r[i] * factor, -1, 1)
			buf.l[i] = clamp(buf.l[i] * factor, -1, 1)
	
class VolumePanel extends ConfigPanel
	override Volume *c
	Slider *slider
	override void __init__(Volume *_v)
		super.__init__(_v)
		addGrid("!width=400", 0, 0, "table1")
		setTarget("table1")
		addCheckBox("Maximieren", 0, 1, "max")
		addGrid("", 0, 0, "table2")
		setTarget("table2")
		addSlider("!expandx", 0, 0, "volume_slider")
		addSpinButton("\\0\\1000\\0.1", 1, 0, "volume")
		addLabel("%", 2, 0, "")
		
		slider = new Slider(self, "volume_slider", "volume", 0, 2, 100, &onVolume, c.config.volume)
	
		event("max", &onMax)
	
	override void __delete__()
		delete(slider)

	override void update()
		slider.set(c.config.volume)
		check("max", c.config.maximize)
		enable("volume", !c.config.maximize)
		enable("volume_slider", !c.config.maximize)

	void onMax()
		c.config.maximize = isChecked("max")
		enable("volume", !c.config.maximize)
		enable("volume_slider", !c.config.maximize)
		changed()

	void onVolume()
		c.config.volume = slider.get()
		changed()

