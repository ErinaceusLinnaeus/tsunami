# Image = hui:zoom-in
# Title[Deutsch] = LautstÃ¤rke

use "../../api.kaba"



class Volume extends AudioEffect
	class Config extends Module.Config
		float volume
		bool maximize
	
		override void reset()
			volume = 1
			maximize = false

	Config config

	override ConfigPanel *create_panel()
		return new Volume.Panel(&self)

	override void process(AudioBuffer buf)
		float factor = config.volume
		if config.maximize
			float max = 0
			for i in 0:len(buf)
				if abs(buf.l[i]) > max
					max = abs(buf.l[i])
			if buf.channels > 1
				for i in 0:len(buf)
					if abs(buf.r[i]) > max
						max = abs(buf.r[i])
			factor = 1 / max
		for i in 0:len(buf)
			buf.l[i] = clamp(buf.l[i] * factor, -1, 1)
		if buf.channels > 1
			for i in 0:len(buf)
				buf.r[i] = clamp(buf.r[i] * factor, -1, 1)
	
	class Panel extends ConfigPanel
		override Volume *c
		Slider *slider
		override void __init__(Module* _v)
			add_grid("!width=400", 0, 0, "table1")
			set_target("table1")
			add_check_box("Maximieren", 0, 1, "max")
			add_grid("", 0, 0, "table2")
			set_target("table2")
			add_slider("!expandx", 0, 0, "volume_slider")
			add_spin_button("\\0\\1000\\0.1", 1, 0, "volume")
			add_label("%", 2, 0, "")
		
			slider = new Slider(&self, "volume_slider", "volume", 0, 2, 100, on_volume, c.config.volume)
	
			event("max", on_max)
	
		override void __delete__()
			delete(slider)

		override void update()
			slider.set(c.config.volume)
			check("max", c.config.maximize)
			enable("volume", !c.config.maximize)
			enable("volume_slider", !c.config.maximize)

		void on_max()
			c.config.maximize = is_checked("max")
			enable("volume", !c.config.maximize)
			enable("volume_slider", !c.config.maximize)
			changed()

		void on_volume()
			c.config.volume = slider.get()
			changed()

