# Image = hui:copy
# Title[Deutsch] = Echo

use tsunami
use helper.grid

const string AUTO_CONFIG_DELAY = "0:1:1:1000:ms"
const string AUTO_CONFIG_VOLUME = "0:2:0.1:100:%"
const string AUTO_CONFIG_FEEDBACK = "0:1:0.1:100:%"




class Echo extends AudioEffect
	class Config extends Module.Config
		float delay
		float volume
		float feedback

		override void reset()
			volume = 0.2
			feedback = 0.5
			delay = 0.15
	Config config
	AudioBuffer buf_temp
	int offset


	void do_delay(out float[] b, out float[] d)
		int p = offset % len(d)
		for bb in b
	
			# old value
			float b0 = bb
		
			# add echo
			bb = bb + d[p] * config.volume
			#clampf(b[i], -1, 1)
		
			# add to echo
			d[p] = b0 + d[p] * config.feedback
		
			p ++
			if p >= len(d)
				p = 0


	override void process(out AudioBuffer buf)

		int delay_samples = session.sample_rate() * config.delay
		buf_temp.set_channels(buf.channels)
		buf_temp.resize(delay_samples)
	
		for c,i in buf.c
			do_delay(c, buf_temp.c[i])
	
		offset += len(buf)
	
	override void reset_state()
		buf_temp.clear()
		offset = 0
		on_config()
