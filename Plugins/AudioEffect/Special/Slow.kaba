use tsunami

let AutoConfigSpeed = "range=0.01:1:0.001,scale=100,unit=%"

class Config extends Module.Config
	var speed: float
	func override reset()
		speed = 0.5

class Slow extends AudioEffect
	var config: Config
	#RingBuffer *rb
	
	#override void __init__()
		#rb = new RingBuffer(1<<20)
	
	func override read(out buf: AudioBuffer) -> int
		let n_out = len(buf)
		let n_in = int(n_out * config.speed)

		var rbuf: AudioBuffer
		rbuf.resize(n_in)
		let r = source.read_audio(rbuf)
		if r <= 0
			return r
		interpolate_buffer(rbuf, buf, 0)
		return len(buf)
