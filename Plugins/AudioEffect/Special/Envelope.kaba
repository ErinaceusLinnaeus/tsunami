use tsunami

const AUTO_CONFIG_A = "0:1:0.0001:1:"
const AUTO_CONFIG_B = "0:1:0.0001:1:"
const AUTO_CONFIG_C = "0:1:0.0001:1:"

class EnvConfig extends Module.Config
	var a, b, c: float
	func override reset()
		a = 0.1
		b = 0.01
		c = 0.0

class Envelope extends AudioEffect
	var config: EnvConfig
	var value: float[2]
	var dvalue: float[2]
	
	func override reset_state()
		for i in 0:2
			value[i] = 0
			dvalue[i] = 0

	func do(out buf: float[], c: int)
		
		float v = value[c]
		float dv = dvalue[c]
		for i in 0:len(buf)
			float x = abs(buf[i])
			
			if x > v
				# go up
				v += (x - v) * config.a
				dv = 0
			else
				# go down
				dv -= config.c
				v += (x - v) * config.b + dv

			buf[i] = v
		value[c] = v
		dvalue[c] = dv
			
	func override process(out buf: AudioBuffer)
		do(buf.c[0], 0)
		if buf.channels > 1
			do(buf.c[1], 1)
		if buf.channels > 2
			session.e("Envelope: channels>2")
