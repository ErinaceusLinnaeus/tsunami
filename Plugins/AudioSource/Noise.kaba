use tsunami

const AUTO_CONFIG_VOLUME = "0:1:0.1:100:%"
const AUTO_CONFIG_TYPE = "uniform|gauss"



class Noise extends AudioSource
	class Config extends Module.Config
		var volume: float
		var type: string
		func override reset()
			volume = 1
			type = "uniform"

	var config: Config
	var r: Random
	
	func __assign__(n: Noise)
	
	func mut do(out buf: float[])
		if config.type == "uniform"
			for b in buf
				b = r.uniform(-1,1) * config.volume
		else if config.type == "gauss"
			for b in buf
				b = r.normal(0, 0.2) * config.volume

	func override read(out buf: AudioBuffer) -> int
		for c in buf.c
			do(c)
		return len(buf)
