// Image = hui:media-play
// Title[Deutsch] = Metronom
use "../api.kaba"
use "../tone.kaba"

Window *dlg

const int SAMPLE_RATE = 44100
float length
float freq
float bpm
int beats
float volume
Chord chords[]

int offset
DummySynthesizer synth

int fill(BufferBox buf)
	float dt_m = 60.0 / bpm
	int sm_m = dt_m * SAMPLE_RATE
	
	buf.r = 0
	buf.l = 0
	
	int num_clicks = buf.num / sm_m + 2
	
	for int i, -1, num_clicks
		int n = offset / sm_m + i
		int pos0 = i * sm_m - (offset % sm_m)
		if (n % beats) == 0
			synth.renderMetronomeClick(buf, pos0, 0, volume)
		else
			synth.renderMetronomeClick(buf, pos0, 1, volume)
		if (chords.num > 0) and (n > 0)
			AddChord(synth, buf, pos0, pos0 + sm_m, chords[n % chords.num], volume * 0.5)
	offset += buf.num
	return buf.num

void Reset()
	output.stop()
	output.playGenerated(&fill, SAMPLE_RATE)

void OnBpm()
	bpm = dlg.getFloat("")
	Reset()
	
void OnBeats()
	beats = dlg.getInt("")
	Reset()
	
void OnChords()
	string str = dlg.getString("")
	ParseChords(str, chords)
	Reset()

void OnClose()
	output.stop()
	delete dlg

void main()
	dlg = new Dialog("Metronome 2", 200, 80, MainWin, true)
	dlg.addGrid("", 0, 0, 1, 2, "table1")
	dlg.setTarget("table1", 0)
	dlg.addGrid("", 0, 0, 2, 3, "table2")
	dlg.addGrid("", 0, 1, 2, 1, "table_bottom")
	dlg.setTarget("table2", 0)
	dlg.addText("Beats per Minute", 0, 0, 0, 0, "")
	dlg.addSpinButton("", 1, 0, 0, 0, "bpm")
	dlg.addText("Beats per Measure", 0, 1, 0, 0, "")
	dlg.addSpinButton("\\1", 1, 1, 0, 0, "beats")
	dlg.addText("Chords", 0, 2, 0, 0, "")
	dlg.addEdit("", 1, 2, 0, 0, "chords")
	dlg.setTarget("table_bottom", 0)
	dlg.addText("", 0, 0, 0, 0, "")
	dlg.addButton("Close", 1, 0, 0, 0, "close")
	dlg.setImage("close", "hui:close")
	
	freq = 880.0
	length = 0.02
	volume = 0.3
	bpm = 90.0
	beats = 4
	dlg.setFloat("bpm", bpm)
	dlg.setInt("beats", beats)
	
	dlg.event("hui:close", &OnClose)
	dlg.event("close", &OnClose)
	dlg.event("bpm", &OnBpm)
	dlg.event("beats", &OnBeats)
	dlg.event("chords", &OnChords)
	
	synth.sample_rate = SAMPLE_RATE
	
	offset = 0
	output.playGenerated(&fill, SAMPLE_RATE)
	
	dlg.run()
