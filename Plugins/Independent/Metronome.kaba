// Image = hui:media-play
// Title[Deutsch] = Metronom
use "../api.kaba"

Window *dlg

const int SAMPLE_RATE = 44100
float length
float freq
float bpm
int num_beats
float volume

DummySynthesizer synth
AudioStream stream
int offset
int cur_beat

int fill(BufferBox buf)
	float dt_m = 60.0 / bpm
	int sm_m = dt_m * SAMPLE_RATE
	
	// clear buffer
	buf.r = 0
	buf.l = 0
	
	// re-render previous click
	offset -= sm_m
	cur_beat = loopi(cur_beat - 1, 0, num_beats - 1)
	
	// render clicks
	while offset < buf.num
		if cur_beat == 0
			synth.renderMetronomeClick(buf, offset, 0, volume)
		else
			synth.renderMetronomeClick(buf, offset, 1, volume)
		cur_beat = loopi(cur_beat + 1, 0, num_beats - 1)
		offset += sm_m
	offset -= buf.num
	return buf.num

void OnBpm()
	bpm = dlg.getFloat("")

void OnNumBeats()
	num_beats = dlg.getInt("")
	cur_beat = 0
	offset = 0
	stream.play()

void OnClose()
	stream.stop()
	delete dlg

void main()
	dlg = new Dialog("Metronome", 200, 80, MainWin, false)
	dlg.fromSource("
Grid ? '' 1 2
	Grid ? '' 3 2
		Text ? 'Speed'
		SpinButton bpm '' expandx
		Text ? '/min'
		Text ? 'Beats'
		SpinButton num_beats '4\\1\\99'
		.
	Grid ? '' 2 1 buttonbar
		Button close 'Close' image=hui:close")
	
	freq = 880.0
	length = 0.02
	volume = 1
	bpm = 90.0
	num_beats = 4
	dlg.setFloat("bpm", bpm)
	
	dlg.eventS("hui:close", &OnClose)
	dlg.eventS("close", &OnClose)
	dlg.eventS("bpm", &OnBpm)
	dlg.eventS("num_beats", &OnNumBeats)
	
	synth.sample_rate = SAMPLE_RATE

	offset = 0
	cur_beat = 0
	stream.setSourceGenerated(&fill, SAMPLE_RATE)
	stream.play()
	
	dlg.run()
