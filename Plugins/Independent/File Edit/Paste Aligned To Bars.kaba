use tsunami

func update_bars(out bars: BarCollection)
	var offset = 0
	for b in bars
		b.offset = offset
		offset += b.length

class XXX extends TsunamiPlugin
	func override on_start()
		if !clipboard.has_data()
			session.e("clipboard is empty")
			stop()
			return
		for t in clipboard.temp.tracks
			if t.type != SignalType.MIDI
				session.e("can only paste midi")
				stop()
				return
		if len(clipboard.temp.bars) == 0
			session.e("clipboard doesn't contain any bars")
			stop()
			return
		if len(session.song.bars) == 0
			session.e("song doesn't contain any bars")
			stop()
			return
			
		var source_layers, target_layers: TrackLayer*[]
		if !clipboard.prepare_layer_map(session.view, source_layers, target_layers)
			stop()
			return
			
		update_bars(clipboard.temp.bars)

		session.song.begin_action_group("paste")
		for i=>ls in source_layers
			paste(session.view.sel.range().offset, ls, target_layers[i])
		session.song.end_action_group()
		stop()
	
	func paste(offset: int, source: TrackLayer, out dest: TrackLayer)
		var b0 = first_bar(offset)
		for i=>b in clipboard.temp.bars
			if b0+i < len(session.song.bars)
				paste_bar(source, dest, b.range(), session.song.bars[b0+i].range())
	
	func remap(rs: Range, rd: Range, x: int) -> int
		return rd.offset + float(x - rs.offset) * float(rd.length) / float(rs.length)
	
	func paste_bar(source: TrackLayer, out dest: TrackLayer, rs: Range, rd: Range)
		print("paste bar... {{rs}} -> {{rd}}")
		var midi = source.midi.get_notes(rs)
		for n in midi
			var c = n.copy(0)
			c.range = RangeTo(remap(rs, rd, n.range.offset), remap(rs, rd, n.range.end()))
			dest.add_midi_note(c)
		
		
	func first_bar(offset: int) -> int
		for i=>b in session.song.bars
			if b.offset >= offset -100
				return i
		return -1
