use tsunami
use hui

class _StreamTest extends TsunamiPlugin
	SignalChain* chain
	AudioInput* input
	AudioRecorder* recorder
	int runner
	int nn
	bool acc
	override void on_start()
	
		chain = session.create_signal_chain("test")
		input = chain.add(Module.Type.STREAM, "AudioInput")
		recorder = chain.add(Module.Type.PLUMBING, "AudioRecorder")
		Module* sucker = chain.add(Module.Type.PLUMBING, "AudioSucker")
		chain.connect(input, 0, recorder, 0)
		chain.connect(recorder, 0, sucker, 0)
		
		nn = 0
		acc = false
		runner = hui.run_repeated(0.1, self, on_tick)
		
		chain.start()

	override void on_stop()
		hui.cancel_runner(runner)
		del chain
	
	void on_tick()
		print("{{input.samples_recorded()}}\t{{recorder.samples_skipped}}")
		nn ++
		if nn > 100
			acc = !acc
			if acc
				print("-------start")
				chain.command(Module.Command.ACCUMULATION_START, 0)
			else
				print("-------stop")
				chain.command(Module.Command.ACCUMULATION_STOP, 0)
				chain.command(Module.Command.ACCUMULATION_CLEAR, 0)
			nn = 0
