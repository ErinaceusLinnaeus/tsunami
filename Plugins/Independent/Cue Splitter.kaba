# Image = hui:cut
use os
use hui
use tsunami

class Part
	var title: string
	var foffset: float
#	void __init__()

func sanitize(s: string) -> string
	var t = s.replace("/", " - ")
	#t = t.replace("", " - ")
	return t

class CueSplitter extends TsunamiPlugin
	
	func override on_start()
		if hui.file_dialog_open(session.win, "", "", "*.cue", "*.cue")
			load_cue(hui.filename)
	
	func load_cue(filename: Path)
		var dir = filename.parent()
		string fn
		string year, album, artist
		Part*[] parts
		Part *cur = nil
		try
			var f = Filesystem.open_text(filename)
			while true
				string s
				f >> s
				#print(s)
				
				if s.head(6) == "FILE \""
					fn = s[6:-6]
				if s.head(11) == "PERFORMER \""
					artist = s[11:-1]
				if s.head(7) == "TITLE \""
					album = s[7:-1]
				if s.head(6) == "YEAR \""
					year = s[6:-1]
				if s.head(8) == "  TRACK "
					cur = new Part()
					cur.foffset = 0
					parts.add(cur)
				if s.head(11) == "    TITLE \""
					cur.title = s[11:-1]
					print(cur.title)
				if s.head(10) == "    INDEX "
					var soff = s[13:]
					print(soff)
					var xx = soff.explode(":")
					cur.foffset = 60 * float(xx[0]) + float(xx[1]) + float(xx[2]) * 0.01
					print(cur.foffset)
		except
			pass

		if fn == ""
			return
		
		session.storage.load(session.song, dir << fn)
		SongRenderer* r = new SongRenderer(session.song)
		
		for p,i in parts
			print("-----")
			Tag[] tags
			if artist != ""
				tags.add(Tag("artist", artist))
			if album != ""
				tags.add(Tag("album", album))
			if year != ""
				tags.add(Tag("year", year))
			tags.add(Tag("title", p.title))
			tags.add(Tag("tracknumber", str(i+1)))
			int offset = p.foffset * session.song.sample_rate
			int end = session.song.range().length
			if i < len(parts)-1
				print(parts[i+1].foffset)
				float fsr = session.song.sample_rate
				print(fsr)
				float fend = parts[i+1].foffset * fsr
				print(fend)
				end = fend
				print(end)
			print("  {{offset}} : {{end}}")
			r.set_range(RangeTo(offset, end))
			var _fn = "{{i+1|02}} - {{sanitize(p.title)}}.flac"
			session.storage.save_via_renderer(r.port_out[0], dir << _fn, end - offset, tags)
		print("-----------------done")
		stop()
		
		
	override void on_stop()
