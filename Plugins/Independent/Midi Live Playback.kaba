use tsunami

class MLPPanel extends ConfigPanel
	override MidiLivePlayback* c
	Session* session
	ConfigPanel* synth_panel
	void __init__(Session _session, MidiLivePlayback _mlp)
		super.__init__(_mlp)
		session = &_session
		from_source("Grid grid ''
	Button select-synth 'select synthesizer...' expandx image=hui:open")
		event("select-synth", on_select_synth)
		
		synth_panel = nil
		
	
	void on_select_synth()
		if synth_panel
			del synth_panel
		string name = ChooseModule(self, session, Module.SYNTHESIZER, c.synth.name)
		c.set_synth(name)
		set_string("select-synth", name)
		
		synth_panel = c.synth.create_panel()
		if synth_panel
			embed(synth_panel, "grid", 0, 1)
			synth_panel.update()
		

class MidiLivePlayback extends TsunamiPlugin
	Module* m_in, m_out
	Synthesizer* synth
	SignalChain* chain
	override void on_start()
		chain = session.create_signal_chain("midi-live")
		m_in = chain.add(Module.STREAM, "MidiInput")
		m_out = chain.add(Module.STREAM, "AudioOutput")
		synth = chain.add(Module.SYNTHESIZER, "")
		chain.connect(m_in, 0, synth, 0)
		chain.connect(synth, 0, m_out, 0)
		chain.start()
	
	void set_synth(string name)
		chain.stop()
		chain.reset_state()
		chain.delete(synth)
		
		synth = chain.add(Module.SYNTHESIZER, name)
		chain.connect(m_in, 0, synth, 0)
		chain.connect(synth, 0, m_out, 0)
		
		chain.start()
		
	override void on_stop()
		del chain
	
	override ConfigPanel* create_panel()
		return new MLPPanel(session, self)