// Image = HuiImageExecute
// Deutsch = Sinus Generator

#include "api.kaba"


class PluginData
	float Frequency, Volume

PluginData data


window GeneratorDialog

void ProcessTrack(BufferBox buf, Track t)
	AudioFile *a = t.root

	float f = data.Frequency

	float w_f = 1.0 / a.sample_rate * f * 2.0 * pi

	for int i, 0, buf.num
		float tt = i * w_f
		float d = sin(tt) * data.Volume
		buf.r[i] = clamp(buf.r[i] + d, -1, 1)
		buf.l[i] = clamp(buf.l[i] + d, -1, 1)

float get_freq(int tone)
	return 220 * pow(2, (tone - 21.0) / 12.0)

void OnFrequency()
	data.Frequency = GeneratorDialog.GetFloat("")

void OnTone()
	data.Frequency = get_freq(GeneratorDialog.GetInt(""))
	GeneratorDialog.SetFloat("frequency", data.Frequency)

void OnVolume()
	data.Volume = SliderGet(GeneratorDialog, "volume")

void DataToDialog()
	GeneratorDialog.SetFloat("frequency", data.Frequency)
	SliderSet(GeneratorDialog, "volume", data.Volume)

void ResetData()
	data.Volume = 0.3
	data.Frequency = 880

string get_name(int tone)
	int octave = (tone / 12) + 2
	int pitch = (tone % 12)
	string name
	if (pitch == 0)
		name = "C"
	if (pitch == 1)
		name = "C#"
	if (pitch == 2)
		name = "D"
	if (pitch == 3)
		name = "D#"
	if (pitch == 4)
		name = "E"
	if (pitch == 5)
		name = "F"
	if (pitch == 6)
		name = "F#"
	if (pitch == 7)
		name = "G"
	if (pitch == 8)
		name = "G#"
	if (pitch == 9)
		name = "A"
	if (pitch == 10)
		name = "A#"
	if (pitch == 11)
		name = "H"
	return name + "\t" + octave + "\t(" + f2s(get_freq(tone), 1) + " Hz)"

void Configure()
	// dialog
	GeneratorDialog=HuiCreateDialog("Ton Generator",415,105,MainWin,false)
	GeneratorDialog.AddText("Tonfrequenz:",5,5,100,25,"")
	GeneratorDialog.AddComboBox("", 110, 5, 200, 25, "tone")
	GeneratorDialog.AddSpinButton("\\0\\100000\\0.1",315,5,70,25,"frequency")
	GeneratorDialog.AddText("Hz",390,5,20,25,"")
	GeneratorDialog.AddText("Lautst√§rke:",5,35,100,25,"")
	GeneratorDialog.AddSlider("",110,35,200,25,"volume_slider")
	GeneratorDialog.AddSpinButton("\\0\\100\\0.1",315,35,70,25,"volume")
	GeneratorDialog.AddText("%",390,35,20,25,"")
	PutCommandBarFixed(GeneratorDialog, 5, 70, 415)
	GeneratorDialog.Update()
	
	int i
	GeneratorDialog.Reset("tone")
	for i, 0, 61
		GeneratorDialog.SetString("tone", get_name(i))
	GeneratorDialog.SetInt("tone", 45)
	
	AddSlider(GeneratorDialog, "volume_slider", "volume", 0, 1, 100, &OnVolume, data.Volume)
	GeneratorDialog.Event("tone", &OnTone)
	GeneratorDialog.Event("frequency", &OnFrequency)

	GeneratorDialog.SetDecimals(1)
	DataToDialog()
	
	HuiWaitTillWindowClosed(GeneratorDialog)

