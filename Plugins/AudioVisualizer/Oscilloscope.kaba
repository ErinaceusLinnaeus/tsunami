// Image = hui:media-play
// Title[Deutsch] = Oszilloskop
use "../api.kaba"

const int NUM_SAMPLES = 2048

class OscilloscopePanel extends ConfigPanel
	Oscilloscope* osci
	
	override void __init__(Oscilloscope *_osci)
		super.__init__(_osci)
		from_source("
DrawingArea area '' height=300")
		
		osci = _osci
		osci.panel = self
	
		event_x("area", "hui:draw", &onDraw)
	
	override void __delete__()
		osci.panel = nil
	
	void onDraw(Painter *p)
		float w = p.width
		float h = p.height
		
		p.set_color(colors.background)
		p.draw_rect(0, 0, w, h)
		
		AudioBuffer *buf = &osci.buffer
		p.set_color(color(0.2,0,1,0))
		//p.set_line_width(0.5)
		float x0, y0, x1, y1
		for i in 0:buf.length
			x1 = w * (buf.r[i] / 2 + 0.5)
			y1 = h * (buf.l[i] / 2 + 0.5)
			p.set_color(color(i2f(i) / NUM_SAMPLES, 0,1,0))
			if i > 0
				p.draw_line(x0, y0, x1, y1)
			x0 = x1
			y0 = y1

class Oscilloscope extends AudioVisualizer
	int n
	AudioBuffer buffer
	OscilloscopePanel *panel
	
	override void __init__()
		panel = nil
	
	override void reset_state()
		n = 0
	
	override void process(AudioBuffer buf)
		buffer = buf
		if panel
			panel.redraw("area")
		
	override ConfigPanel* create_panel()
		return new OscilloscopePanel(self)

