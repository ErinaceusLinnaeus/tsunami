# Image = hui:media-play
# Title[Deutsch] = Oszilloskop
use hui
use tsunami

const int NUM_SAMPLES = 2048

class OscilloscopePanel extends ConfigPanel
	override Oscilloscope* c
	
	override void __init__(Module _osci)
		from_source("
DrawingArea area '' height=200 expandy")
	
		event_x("area", "hui:draw", on_draw)
		
		c.subscribe(self, on_update, "Change")
	
	override void __delete__()
		c.unsubscribe(self)
	
	void on_update()
		redraw("area")
	
	void on_draw(Painter p)
		float w = p.width
		float h = p.height
		
		p.set_color(colors.background)
		p.draw_rect(0, 0, w, h)
		
		let buf = &c.buffer
		p.set_color(color(0,1,0, 0.2))
		#p.set_line_width(0.5)
		float x0, y0, x1, y1
		for i in 0:len(buf)
			x1 = w * (buf.c[0][i] / 2 + 0.5)
			y1 = h * (buf.c[1][i] / 2 + 0.5)
			p.set_color(color(0,1,0, float(i) / NUM_SAMPLES))
			if i > 0
				p.draw_line(x0, y0, x1, y1)
			x0 = x1
			y0 = y1

class Oscilloscope extends AudioVisualizer
	AudioBuffer buffer
	
	override void reset_state()
		buffer.clear()
	
	override void process(AudioBuffer buf)
		buffer = buf
		
	override ConfigPanel* create_panel()
		return new OscilloscopePanel(self)

