// Image = hui:zoom-in
// Title[Deutsch] = HÃ¼llkurve

use "../../api.kaba"
use "../../grid.kaba"



const int MIN_VOL = 0-55
const int MAX_VOL = 35

class Config : PluginData
	complex[] curve

	void fill_inter(FloatInterpolator fi)
		fi.setType("cubic-spline-notang")
		fi.add(curve[0].y, 0)
		for i in 1:curve.num
			fi.add(curve[i].y, curve[i].x - curve[i - 1].x)
		fi.normalize()

	override void reset()
		curve.clear()
		curve.add(complex(0, 0))
		curve.add(complex(1, 0))
		//MouseOver = -1
		//Selected = -1


class HullCurve : AudioEffect

	Config config

	void hull(float[] b)
	
		FloatInterpolator fi
		config.fill_inter(fi)
	
		// hull curve
		for i in 1:b.num
			float param = i2f(i) / b.num
			float db = fi.get(param)
			b[i] = b[i] * pow(10, db / 20)

	override void process(BufferBox buf)
		hull(buf.r)
		hull(buf.l)

	override ConfigPanel *createPanel()
		return new HullCurvePanel(self)

class HullGrid : Grid
	Config *config
	ConfigPanel *cp
	int MouseOver, Selected

	override void onDraw(Painter *c)
	
		// curve + area below
		FloatInterpolator fi
		config.fill_inter(fi)
		drawCurve(c, fi, true)
	
		// points
		for i in 0:config.curve.num
			drawPoint2(c, config.curve[i], i == Selected, i == MouseOver)

	// left button down -> select
	override void onLeftButtonDown()
		Selected = MouseOver
		redraw()

	// [Delete] -> remove point
	override void onKeyDown()
		if HuiGetEvent().key_code == KeyDelete
			if Selected > 0 and Selected < config.curve.num-1
				config.curve.remove(Selected)
				cp.notify()
				Selected = -1
				redraw()

	// right button down -> new point
	override void onRightButtonDown()
		for i in 1:config.curve.num
			complex q = project2(config.curve[i - 1])
			complex p = project2(config.curve[i])
			if (mx > q.x) and (mx < p.x)
				config.curve.insert(getMouse2(), i)
				cp.notify()
				Selected = i
				redraw()
				i = config.curve.num
				break

	override void onMouseMove()
		// move
		if HuiGetEvent().button_l and (Selected >= 0)
			config.curve[Selected] = getMouse2()
			float xmin = 0
			float xmax = 1
			if Selected > 0
				xmin = config.curve[Selected - 1].x
			if Selected < config.curve.num - 1
				xmax = config.curve[Selected + 1].x
			config.curve[Selected].x = clamp(config.curve[Selected].x, xmin, xmax)
			config.curve[Selected].y = clamp(config.curve[Selected].y, MIN_VOL, MAX_VOL)
			if Selected == config.curve.num - 1
				config.curve[Selected].x = 1
			if Selected == 0
				config.curve[Selected].x = 0
			cp.notify()
		else
		// mouse over?
			MouseOver = -1
			for c,i in config.curve
				complex p = project2(c)
				if (mx > p.x - 5) and (mx < p.x + 5) and (my > p.y - 5) and (my < p.y + 5)
					MouseOver = i
		redraw()

class HullCurvePanel : ConfigPanel
	HullGrid grid
	override void __init__(HullCurve *_h)
		super.__init__(_h)
		fromSource("
Grid ? '' 1 2
	DrawingArea drawing '' grabfocus height=250
	Grid ? '' 2 1 noexpandy
		ComboBox type 'linear\\log'
		CheckBox preview 'show buffer'")
	
		//EventMX("drawing", "hui:draw", self, &OnDraw)
	
		grid.config = &_h.config
		grid.cp = self
		grid.init(self, "drawing")
		grid.x_axis.set(0, 1, false, "")
		grid.y_axis.set(MIN_VOL, MAX_VOL, false, "db")
	
		grid.redraw()
	
	override void update()
		redraw("drawing")

