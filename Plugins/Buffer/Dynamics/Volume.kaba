// Image = hui:zoom-in
// Title[Deutsch] = Lautstärke

use "../../api.kaba"


class Config : PluginData
	float Volume
	bool Maximize
	
	overwrite void reset()
		self.Volume = 1

class Volume : AudioEffect
	VolumeDialog *dlg
	Config config

	overwrite void UpdateDialog()
		dlg.fill()

	overwrite void Configure()
		dlg = new VolumeDialog(self)
		dlg.Run()

	overwrite void ProcessTrack(BufferBox buf)
		float factor = config.Volume
		if config.Maximize
			float max = 0
			for int i, 0, buf.num
				if abs(buf.r[i]) > max
					max = abs(buf.r[i])
				if abs(buf.l[i]) > max
					max = abs(buf.l[i])
			factor = 1 / max
		for int i, 0, buf.num
			buf.r[i] = clamp(buf.r[i] * factor, -1, 1)
			buf.l[i] = clamp(buf.l[i] * factor, -1, 1)
	
class VolumeDialog : Dialog
	Volume *v
	void __init__(Volume *_v)
		super.__init__("Lautstärke", 305, 105, MainWin, false)
		AddGrid("", 0, 0, 1, 3, "table1")
		SetTarget("table1", 0)
		AddCheckBox("Maximieren", 0, 1, 0, 0, "max")
		AddGrid("", 0, 0, 3, 1, "table2")
		SetTarget("table2", 0)
		AddSlider("!expandx", 0, 0, 0, 0, "volume_slider")
		AddSpinButton("\\0\\1000\\0.1", 1, 0, 0, 0, "volume")
		AddText("%", 2, 0, 0, 0, "")
		PutCommandBar(self, "table1", 0, 2)
		
		v = _v
		
		CreateSliderM(self, "volume_slider", "volume", 0, 2, 100, &OnVolume, v.config.Volume)
	
		EventM("max", self, &OnMax)
		
		fill()

	void fill()
		SliderSet(self, "volume", v.config.Volume)
		Check("max", v.config.Maximize)
		Enable("volume", !v.config.Maximize)
		Enable("volume_slider", !v.config.Maximize)

	void OnMax()
		v.config.Maximize = IsChecked("max")
		Enable("volume", !v.config.Maximize)
		Enable("volume_slider", !v.config.Maximize)

	void OnVolume()
		v.config.Volume = SliderGet(self, "volume")

