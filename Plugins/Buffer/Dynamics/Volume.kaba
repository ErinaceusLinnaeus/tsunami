// Image = hui:zoom-in
// Title[Deutsch] = Lautstärke

#include "../../api.kaba"


window VolumeDialog

class PluginData
	float Volume
	bool Maximize
PluginData data

void ResetData()
	data.Volume = 1

void DataToDialog()
	SliderSet(VolumeDialog, "volume", data.Volume)
	VolumeDialog.Check("max", data.Maximize)
	VolumeDialog.Enable("volume", !data.Maximize)
	VolumeDialog.Enable("volume_slider", !data.Maximize)

void OnMax()
	data.Maximize = VolumeDialog.IsChecked("max")
	VolumeDialog.Enable("volume", !data.Maximize)
	VolumeDialog.Enable("volume_slider", !data.Maximize)

void OnVolume()
	data.Volume = SliderGet(VolumeDialog, "volume")

void Configure()
	// dialog
	VolumeDialog=HuiCreateDialog("Lautstärke",305,105,MainWin,false)
	VolumeDialog.AddSlider("",5,5,205,25,"volume_slider")
	VolumeDialog.AddSpinButton("\\0\\1000\\0.1",215,5,60,25,"volume")
	VolumeDialog.AddText("%",280,5,20,25,"")
	VolumeDialog.AddCheckBox("Maximieren",5,35,295,25,"max")
	PutCommandBarFixed(VolumeDialog, 5, 70, 305)
	AddSlider(VolumeDialog, "volume_slider", "volume", 0, 2, 100, &OnVolume, data.Volume)
	VolumeDialog.Update()
	
	VolumeDialog.Event("max", &OnMax)
	
	VolumeDialog.SetDecimals(1)
	DataToDialog()

	HuiWaitTillWindowClosed(VolumeDialog)

void ProcessTrack(BufferBox buf, Track t, int level)
	float factor = data.Volume
	if data.Maximize
		float max = 0
		for int i, 0, buf.num
			if abs(buf.r[i]) > max
				max = abs(buf.r[i])
			if abs(buf.l[i]) > max
				max = abs(buf.l[i])
		factor = 1 / max
	for int i, 0, buf.num
		buf.r[i] = clamp(buf.r[i] * factor, -1, 1)
		buf.l[i] = clamp(buf.l[i] * factor, -1, 1)

