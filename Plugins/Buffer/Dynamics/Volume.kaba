// Image = hui:zoom-in
// Title[Deutsch] = Lautstärke

use "../../api.kaba"


VolumeDialog *dlg

class PluginData
	float Volume
	bool Maximize
PluginData data

void ResetData()
	data.Volume = 1

void DataToDialog()
	dlg.fill()
	
class VolumeDialog : Dialog
	void __init__()
		super.__init__("Lautstärke", 305, 105, MainWin, false)
		AddControlTable("", 0, 0, 1, 3, "table1")
		SetTarget("table1", 0)
		AddCheckBox("Maximieren", 0, 1, 0, 0, "max")
		AddControlTable("", 0, 0, 3, 1, "table2")
		SetTarget("table2", 0)
		AddSlider("!expandx", 0, 0, 0, 0, "volume_slider")
		AddSpinButton("\\0\\1000\\0.1", 1, 0, 0, 0, "volume")
		AddText("%", 2, 0, 0, 0, "")
		PutCommandBar(self, "table1", 0, 2)
		CreateSliderM(self, "volume_slider", "volume", 0, 2, 100, &OnVolume, data.Volume)
	
		EventM("max", self, &OnMax)
		
		fill()

	void fill()
		SliderSet(self, "volume", data.Volume)
		Check("max", data.Maximize)
		Enable("volume", !data.Maximize)
		Enable("volume_slider", !data.Maximize)

	void OnMax()
		data.Maximize = IsChecked("max")
		Enable("volume", !data.Maximize)
		Enable("volume_slider", !data.Maximize)

	void OnVolume()
		data.Volume = SliderGet(self, "volume")

void Configure()
	dlg = new VolumeDialog
	dlg.Run()

void ProcessTrack(BufferBox buf)
	float factor = data.Volume
	if data.Maximize
		float max = 0
		for int i, 0, buf.num
			if abs(buf.r[i]) > max
				max = abs(buf.r[i])
			if abs(buf.l[i]) > max
				max = abs(buf.l[i])
		factor = 1 / max
	for int i, 0, buf.num
		buf.r[i] = clamp(buf.r[i] * factor, -1, 1)
		buf.l[i] = clamp(buf.l[i] * factor, -1, 1)

