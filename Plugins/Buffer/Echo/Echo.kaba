// Image = hui:copy
// Title[Deutsch] = Echo

use "../../api.kaba"

bool not_first_time


class Config : PluginData
	float Delay
	float Volume
	float Feedback

	overwrite void reset()
		self.Volume = 0.2
		Feedback = 0.5
		Delay = 0.15


class PluginState : PluginData
	float buf_r[], buf_l[]
	int offset

	overwrite void reset()
		buf_r.clear()
		buf_l.clear()
		offset = 0

class Echo : AudioEffect
	Config config
	PluginState state
	DelayPanel *panel


	void doDelay(float b[], float d[])
		int p = state.offset % d.num
		for int i, 0, b.num
	
			// old value
			float b0 = b[i]
		
			// add echo
			b[i] = b[i] + d[p] * config.Volume
			//clampf(b[i], -1, 1)
		
			// add to echo
			d[p] = b0 + d[p] * config.Feedback
		
			p ++
			if p >= d.num
				p = 0



	overwrite void updateDialog()
		panel.fill()

	overwrite Panel *createPanel()
		panel = new DelayPanel(self)
		return panel

	overwrite void processTrack(BufferBox buf)

		AudioFile *a = audio
		int delay_samples = a.sample_rate * config.Delay
		state.buf_r.resize(delay_samples)
		state.buf_l.resize(delay_samples)
	
		doDelay(buf.r, state.buf_r)
		doDelay(buf.l, state.buf_l)
	
		state.offset += buf.num
					

	
class DelayPanel : Panel
	Echo *e
	void __init__(Echo *_e)
		fromSource("
Grid ? '' 4 3 width=400
	Text ? 'Lautstärke'
	Slider volume_slider '' expandx
	SpinButton volume '\\0\\200\\0.1'
	Text ? '%'
	Text ? 'Verzögerung'
	Slider delay_slider ''
	SpinButton delay '\\0\\1000'
	Text ? 'ms'
	Text ? 'Feedback'
	Slider feedback_slider ''
	SpinButton feedback '\\0\\100\\0.1
	Text ? '%'")
		
		e = _e
	
		CreateSliderM(self, "volume_slider", "volume", 0, 2, 100, &onVolume, e.config.Volume)
		CreateSliderM(self, "feedback_slider", "feedback", 0, 1, 100, &onFeedback, e.config.Feedback)
		CreateSliderM(self, "delay_slider", "delay", 0, 1, 1000, &onDelay, e.config.Delay)
	
		fill()
		
	void fill()
		SliderSet(self, "volume", e.config.Volume)
		SliderSet(self, "feedback", e.config.Feedback)
		SliderSet(self, "delay", e.config.Delay)
		
	void onVolume()
		e.config.Volume = SliderGet(self, "volume")
		e.notify()

	void onFeedback()
		e.config.Feedback = SliderGet(self, "feedback")
		e.notify()

	void onDelay()
		e.config.Delay = SliderGet(self, "delay")
		e.notify()

