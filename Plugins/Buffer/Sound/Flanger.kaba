// Image = hui:copy
// Title[Deutsch] = Flanger

use "../../api.kaba"



class PluginConfig : PluginData
	float Delay
	float Speed
	float Depth
	overwrite void reset()
		Depth = 0.5
		Speed = 0.3
		Delay = 0.01

class PluginState : PluginData
	float temp_r[]
	float temp_l[]
	int offset
	overwrite void reset()
		temp_r.clear()
		temp_l.clear()
		offset = 0

class Flanger : AudioEffect
	ConfigPanel *dlg
	PluginConfig config
	PluginState state

	void doFlanger(float b[], float temp[], int sample_rate)
		int p = state.offset % temp.num
	
		float f_a = (1 - 0.5 * config.Depth) * config.Delay
		float f_b = 0.5 * config.Depth * config.Delay
		float f_c = 1.0 / sample_rate * 2 * pi * config.Speed
	
		for int i, 0, b.num
	
			// old value
			temp[p] = b[i]
		
			// shift
			float dt = f_a - cos((i + state.offset) * f_c) * f_b
			int dp = dt * sample_rate
			int p2 = p - dp
			if p2 < 0
				p2 += temp.num
		
			// add echo
			b[i] += temp[p2]
		
			p ++
			if p >= temp.num
				p = 0

	overwrite void updateDialog()
		dlg.fill()

	overwrite Panel *createPanel()
		return new ConfigPanel(self)
	
	overwrite void processTrack(BufferBox buf)
		AudioFile *a = audio
		int delay_samples = a.sample_rate * config.Delay + 1
		state.temp_r.resize(delay_samples)
		state.temp_l.resize(delay_samples)
	
		doFlanger(buf.r, state.temp_r, a.sample_rate)
		doFlanger(buf.l, state.temp_l, a.sample_rate)
	
		state.offset += buf.num
	
class ConfigPanel : Panel
	Flanger *f
	void __init__(Flanger *_f)
		fromSource("
Grid ? '' 4 3 width=400
	Text ? 'Geschwindigkeit'
	Slider speed_slider '' expandx
	SpinButton speed '\\0\\10000\\0.1'
	Text ? 'Hz'
	Text ? 'Verz√∂gerung'
	Slider delay_slider ''
	SpinButton delay '\\0\\10000\\0.1'
	Text ? 'ms'
	Text ? 'Tiefe'
	Slider depth_slider ''
	SpinButton depth '\\0\\100\\0.1'
	Text ? '%'")
		f = _f
	
		CreateSliderM(self, "speed_slider", "speed", 0, 2,    1,    &onSpeed, f.config.Speed)
		CreateSliderM(self, "depth_slider", "depth", 0, 1,    100,  &onDepth, f.config.Depth)
		CreateSliderM(self, "delay_slider", "delay", 0, 0.02, 1000, &onDelay, f.config.Delay)
	
		fill()
		
	void fill()
		SliderSet(self, "speed", f.config.Speed)
		SliderSet(self, "depth", f.config.Depth)
		SliderSet(self, "delay", f.config.Delay)
		
	void onSpeed()
		f.config.Speed = SliderGet(self, "speed")

	void onDepth()
		f.config.Depth = SliderGet(self, "depth")

	void onDelay()
		f.config.Delay = SliderGet(self, "delay")

