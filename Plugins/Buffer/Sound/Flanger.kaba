// Image = hui:copy
// Title[Deutsch] = Flanger

use "../../api.kaba"

bool not_first_time


ConfigDialog *dlg

class PluginData
	float Delay
	float Speed
	float Depth

PluginData data

void ResetData()
	data.Depth = 0.5
	data.Speed = 0.3
	data.Delay = 0.01

class PluginState
	float temp_r[]
	float temp_l[]
	int offset

PluginState state

void ResetState()
	state.temp_r.clear()
	state.temp_l.clear()
	state.offset = 0

void DoFlanger(float b[], float temp[], int sample_rate)
	int p = state.offset % temp.num
	
	float f_a = (1 - 0.5 * data.Depth) * data.Delay
	float f_b = 0.5 * data.Depth * data.Delay
	float f_c = 1.0 / sample_rate * 2 * pi * data.Speed
	
	for int i, 0, b.num
	
		// old value
		temp[p] = b[i]
		
		// shift
		float dt = f_a - cos((i + state.offset) * f_c) * f_b
		int dp = dt * sample_rate
		int p2 = p - dp
		if p2 < 0
			p2 += temp.num
		
		// add echo
		b[i] += temp[p2]
		
		p ++
		if p >= temp.num
			p = 0

void DataToDialog()
	dlg.fill()
	
class ConfigDialog : Dialog
	void __init__()
		super.__init__("Flanger", 485, 175, MainWin, false)
		AddControlTable("", 0, 0, 1, 3, "table1")
		SetTarget("table1", 0)
		AddControlTable("", 0, 1, 4, 3, "table2")
		SetTarget("table2", 0)
		AddText("Geschwindigkeit", 0, 0, 0, 0, "")
		AddSlider("!expandx", 1, 0, 0, 0, "speed_slider")
		AddSpinButton("\\0\\10000\\0.1", 2, 0, 0, 0, "speed")
		AddText("Hz", 3, 0, 0, 0, "")
		AddText("Verz√∂gerung", 0, 1, 0, 0, "")
		AddSlider("", 1, 1, 0, 0, "delay_slider")
		AddSpinButton("\\0\\10000\\0.1", 2, 1, 0, 0, "delay")
		AddText("ms", 3, 1, 0, 0, "")
		AddText("Tiefe", 0, 2, 0, 0, "")
		AddSlider("", 1, 2, 0, 0, "depth_slider")
		AddSpinButton("\\0\\100\\0.1", 2, 2, 0, 0, "depth")
		AddText("%", 3, 2, 0, 0, "")
		
		PutFavoriteBar(self, "table1", 0, 0)
		PutCommandBar(self, "table1", 0, 2)
	
		CreateSliderM(self, "speed_slider", "speed", 0, 2,    1,    &OnSpeed, data.Speed)
		CreateSliderM(self, "depth_slider", "depth", 0, 1,    100,  &OnDepth, data.Depth)
		CreateSliderM(self, "delay_slider", "delay", 0, 0.02, 1000, &OnDelay, data.Delay)
	
		fill()
		
	void fill()
		SliderSet(self, "speed", data.Speed)
		SliderSet(self, "depth", data.Depth)
		SliderSet(self, "delay", data.Delay)
		
	void OnSpeed()
		data.Speed = SliderGet(self, "speed")

	void OnDepth()
		data.Depth = SliderGet(self, "depth")

	void OnDelay()
		data.Delay = SliderGet(self, "delay")

void Configure()
	dlg = new ConfigDialog
	dlg.Run()
	
void ProcessTrack(BufferBox buf)
	AudioFile *a = audio
	int delay_samples = a.sample_rate * data.Delay + 1
	state.temp_r.resize(delay_samples)
	state.temp_l.resize(delay_samples)
	
	DoFlanger(buf.r, state.temp_r, a.sample_rate)
	DoFlanger(buf.l, state.temp_l, a.sample_rate)
	
	state.offset += buf.num

