// Image = hui:properties
// Title[Deutsch] = Hochpass Filter
use "../../api.kaba"

const string AutoConfigFrequency = "0:5000:0.1:1:Hz"

class Config extends PluginData
	float Frequency
	override void reset()
		Frequency = 1000

class State extends PluginData
	float in_r, in_l, out_r, out_l
	bool used
	override void reset()
		used = false

class LowPassFilter extends AudioEffect
	Config config
	State state

	// y[i] := Î± * (y[i-1] + x[i] - x[i-1])
	override void process(BufferBox buf)
		float RC = 1 / (2 * pi * config.Frequency)
		float dt = 1.0 / song.sample_rate
		float a = RC / (RC + dt)
		float prev_in_r = 0
		float prev_in_l = 0
		if state.used
			float tr = buf.r[0]
			float tl = buf.l[0]
			buf.r[0] = a * (buf.r[0] + state.out_r - state.in_r)
			buf.l[0] = a * (buf.l[0] + state.out_l - state.in_l)
			prev_in_r = tr
			prev_in_l = tl

	
		for i in 1:buf.length
			float tr = buf.r[i]
			float tl = buf.l[i]
			buf.r[i] = a * (buf.r[i] + buf.r[i-1] - prev_in_r)
			buf.l[i] = a * (buf.l[i] + buf.l[i-1] - prev_in_l)
			prev_in_r = tr
			prev_in_l = tl
		
		state.used = true
		state.in_r = prev_in_r
		state.in_l = prev_in_l
		state.out_r = buf.r[buf.length - 1]
		state.out_l = buf.l[buf.length - 1]
