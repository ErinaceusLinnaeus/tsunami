// Image = hui:add
// Title[Deutsch] = Metronom

#include "../../api.kaba"


class PluginState
	int beat
	int dpos
	void Reset()
		self.beat = 0
		self.dpos = 0


window dlg

class Plugin
	float BeatsPerMinute
	float Volume
	int BeatsPerMeasure


	void ProcessTrack(BufferBox buf, Track t, PluginState state)
		AudioFile *a = t.root

		float dt_m = 60.0 / self.BeatsPerMinute
		int sm_m = dt_m * a.sample_rate

		while true
			if state.beat == 0
				buf.add_click(state.dpos, self.Volume, 660.0, a.sample_rate)
			else
				buf.add_click(state.dpos, self.Volume * 0.5, 880.0, a.sample_rate)

			state.beat ++
			if state.beat >= self.BeatsPerMeasure
				state.beat = 0
			state.dpos += sm_m
			if state.dpos >= buf.num
				state.dpos -= buf.num
				break

	void Reset()
		self.Volume = 0.3
		self.BeatsPerMinute = 90
		self.BeatsPerMeasure = 4

	void DataToDialog()
		dlg.SetFloat("beats_per_minute", self.BeatsPerMinute)
		dlg.SetInt("beats_per_measure", self.BeatsPerMeasure)
		dlg.SetFloat("volume", self.Volume * 100)
		//SliderSet(dlg, "volume", self.Volume)

	void OnMetroBeats()
		self.BeatsPerMinute = dlg.GetFloat("")

	void OnMetroMeasure()
		self.BeatsPerMeasure = dlg.GetInt("")

	void OnMetroVolume()
		self.Volume = dlg.GetFloat("") / 100
		//self.Volume = SliderGet(dlg, "volume")

	void Configure()
		// dialog
		dlg=HuiCreateDialog("Metronom",255,135,MainWin,false)
		dlg.AddText("Geschwindigkeit:",5,5,100,25,"")
		dlg.AddSpinButton("\\0\\1000\\0.1",110,5,100,25,"beats_per_minute")
		dlg.AddText("/min",215,5,30,25,"")
		dlg.AddText("Takt:",5,35,100,25,"")
		dlg.AddSpinButton("\\1\\32\\1",110,35,100,25,"beats_per_measure")
		dlg.AddText("Lautst√§rke:",5,65,100,25,"")
		dlg.AddSpinButton("\\0\\100\\0.1",110,65,100,25,"volume")
		dlg.AddText("%",215,65,30,25,"")
		PutCommandBarFixed(dlg, 5, 100, 255)
		dlg.Update()

		dlg.SetDecimals(1)
	
		dlg.EventX("beats_per_minute", self, &OnMetroBeats)
		dlg.EventX("beats_per_measure", self, &OnMetroMeasure)
		dlg.EventX("volume", self, &OnMetroVolume)
	
		self.DataToDialog()
	
		HuiWaitTillWindowClosed(dlg)

