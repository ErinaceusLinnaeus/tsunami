// Image = hui:add
// Title[Deutsch] = Metronom

use "../../api.kaba"


class Config : PluginData
	float BeatsPerMinute
	float Volume
	int BeatsPerMeasure
	overwrite void reset()
		Volume = 0.3
		BeatsPerMinute = 90
		BeatsPerMeasure = 4


class PluginState : PluginData
	int beat
	int dpos
	overwrite void reset()
		beat = 0
		dpos = 0



class Metronome : AudioEffect
	PluginState state
	Config config
	DummySynthesizer synth

	overwrite void process(BufferBox buf)
		Song *a = song

		float dt_m = 60.0 / config.BeatsPerMinute
		int sm_m = dt_m * a.sample_rate
	
		synth.setSampleRate(a.sample_rate)

		while true
			if state.beat == 0
				synth.addMetronomeClick(state.dpos, 0, config.Volume)
			else
				synth.addMetronomeClick(state.dpos, 1, config.Volume)
		
			state.beat ++
			if state.beat >= config.BeatsPerMeasure
				state.beat = 0
			state.dpos += sm_m
			if state.dpos >= buf.num
				state.dpos -= buf.num
				break
		synth.read(buf)
		
	overwrite ConfigPanel *createPanel()
		return new MetronomePanel(self)

	
class MetronomePanel : ConfigPanel
	overwrite Metronome *c
	void __init__(Metronome *_m)
		super.__init__(_m)
		addGrid("!width=300", 0, 0, 2, 3, "table2")
		setTarget("table2", 0)
		addLabel("Geschwindigkeit:", 0, 0, 0, 0, "")
		addSpinButton("!expandx\\\\0\\1000\\0.1", 1, 0, 0, 0, "beats_per_minute")
		addLabel("/min", 2, 0, 0, 0, "")
		addLabel("Schläge pro Takt:", 0, 1, 0, 0, "")
		addSpinButton("\\1\\32\\1", 1, 1, 0, 0, "beats_per_measure")
		addLabel("Lautstärke:", 0, 2, 0, 0, "")
		addSpinButton("\\0\\100\\0.1", 1, 2, 0, 0, "volume")
		addLabel("%", 2, 2, 0, 0, "")
	
		event("beats_per_minute", &onMetroBeats)
		event("beats_per_measure", &onMetroMeasure)
		event("volume", &onMetroVolume)
	
		update()

	overwrite void update()
		setFloat("beats_per_minute", c.config.BeatsPerMinute)
		setInt("beats_per_measure", c.config.BeatsPerMeasure)
		setFloat("volume", c.config.Volume * 100)
		//SliderSet(self, "volume", c.config.Volume)

	void onMetroBeats()
		c.config.BeatsPerMinute = getFloat("")
		notify()

	void onMetroMeasure()
		c.config.BeatsPerMeasure = getInt("")
		notify()

	void onMetroVolume()
		c.config.Volume = getFloat("") / 100
		//m.config.Volume = SliderGet(self, "volume")
		notify()

