// Image = hui:add
// Title[Deutsch] = Metronom

use "../../api.kaba"
use "../../Midi/Source/Metronome.kaba"

class Config extends PluginData
	float beats_per_minute
	float volume
	int beats_per_measure
	override void reset()
		volume = 0.3
		beats_per_minute = 90
		beats_per_measure = 4



class Metronome extends AudioEffect
	Config config
	Synthesizer *synth
	MetronomeSource *source
	
	override void __init__()
		synth = new DummySynthesizer
		source = new MetronomeSource(90, 4, sample_rate)
		synth.out.setSource(source)
	
	override void __delete__()
		delete source
		delete synth

	override void process(AudioBuffer buf)
		synth.setSampleRate(sample_rate)
		source.sample_rate = sample_rate
		source.volume = config.volume
		source.num_beats = config.beats_per_measure
		source.setBpm(config.beats_per_minute)
		synth.out.read(buf)
		
	override ConfigPanel *createPanel()
		return new MetronomePanel(self)

	
class MetronomePanel extends ConfigPanel
	override Metronome *c
	override void __init__(Metronome *_m)
		super.__init__(_m)
		addGrid("!width=300", 0, 0, "table2")
		setTarget("table2")
		addLabel("Geschwindigkeit:", 0, 0, "")
		addSpinButton("!expandx,range=0:1000:0.1\\", 1, 0, "beats_per_minute")
		addLabel("/min", 2, 0, "")
		addLabel("Schläge pro Takt:", 0, 1, "")
		addSpinButton("!range=1:32:1\\", 1, 1, "beats_per_measure")
		addLabel("Lautstärke:", 0, 2, "")
		addSpinButton("!range=0:100:0.1\\", 1, 2, "volume")
		addLabel("%", 2, 2, "")
	
		event("beats_per_minute", &onMetroBeats)
		event("beats_per_measure", &onMetroMeasure)
		event("volume", &onMetroVolume)
	
		update()

	override void update()
		setFloat("beats_per_minute", c.config.beats_per_minute)
		setInt("beats_per_measure", c.config.beats_per_measure)
		setFloat("volume", c.config.volume * 100)
		//SliderSet(self, "volume", c.config.volume)

	void onMetroBeats()
		c.config.beats_per_minute = getFloat("")
		notify()

	void onMetroMeasure()
		c.config.beats_per_measure = getInt("")
		notify()

	void onMetroVolume()
		c.config.volume = getFloat("") / 100
		//m.config.volume = SliderGet(self, "volume")
		notify()

