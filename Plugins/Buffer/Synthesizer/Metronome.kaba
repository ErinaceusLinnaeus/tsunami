// Image = hui:add
// Title[Deutsch] = Metronom

use "../../api.kaba"


class Config : PluginData
	float BeatsPerMinute
	float Volume
	int BeatsPerMeasure
	overwrite void reset()
		Volume = 0.3
		BeatsPerMinute = 90
		BeatsPerMeasure = 4


class PluginState : PluginData
	int beat
	int dpos
	overwrite void reset()
		beat = 0
		dpos = 0


DummySynthesizer synth


class Metronome : AudioEffect
	PluginState state
	Config config
	ConfigPanel *panel

	overwrite void processTrack(BufferBox buf)
		AudioFile *a = audio

		float dt_m = 60.0 / config.BeatsPerMinute
		int sm_m = dt_m * a.sample_rate
	
		synth.sample_rate = a.sample_rate

		while true
			if state.beat == 0
				synth.renderMetronomeClick(buf, state.dpos, 0, config.Volume)
			else
				synth.renderMetronomeClick(buf, state.dpos, 1, config.Volume)
		
			state.beat ++
			if state.beat >= config.BeatsPerMeasure
				state.beat = 0
			state.dpos += sm_m
			if state.dpos >= buf.num
				state.dpos -= buf.num
				break

	overwrite void updateDialog()
		panel.fill()
		
	overwrite Panel *createPanel()
		panel = new ConfigPanel(self)
		return panel

	
class ConfigPanel : Panel
	Metronome *m
	void __init__(Metronome *_m)
		addGrid("!width=300", 0, 0, 2, 3, "table2")
		setTarget("table2", 0)
		addText("Geschwindigkeit:", 0, 0, 0, 0, "")
		addSpinButton("!expandx\\\\0\\1000\\0.1", 1, 0, 0, 0, "beats_per_minute")
		addText("/min", 2, 0, 0, 0, "")
		addText("Schläge pro Takt:", 0, 1, 0, 0, "")
		addSpinButton("\\1\\32\\1", 1, 1, 0, 0, "beats_per_measure")
		addText("Lautstärke:", 0, 2, 0, 0, "")
		addSpinButton("\\0\\100\\0.1", 1, 2, 0, 0, "volume")
		addText("%", 2, 2, 0, 0, "")
	
		eventM("beats_per_minute", self, &onMetroBeats)
		eventM("beats_per_measure", self, &onMetroMeasure)
		eventM("volume", self, &onMetroVolume)
		
		m = _m
	
		fill()

	void fill()
		setFloat("beats_per_minute", m.config.BeatsPerMinute)
		setInt("beats_per_measure", m.config.BeatsPerMeasure)
		setFloat("volume", m.config.Volume * 100)
		//SliderSet(self, "volume", m.config.Volume)

	void onMetroBeats()
		m.config.BeatsPerMinute = getFloat("")
		m.notify()

	void onMetroMeasure()
		m.config.BeatsPerMeasure = getInt("")
		m.notify()

	void onMetroVolume()
		m.config.Volume = getFloat("") / 100
		//m.config.Volume = SliderGet(self, "volume")
		m.notify()

