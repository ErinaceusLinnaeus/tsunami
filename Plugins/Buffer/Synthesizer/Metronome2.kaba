// Image = hui:add
// Title[Deutsch] = Metronom

use "../../api.kaba"

class Plugin
	virtual void ProcessTrack(BufferBox buf)
	virtual void Configure()
class PluginData
	window dlg
	virtual void Reset()
	virtual void Configure()
	virtual void UpdateDialog()
	virtual void DataFromDialog()
class PluginState
	virtual void Reset()

class MetronomeData : PluginData
	float BeatsPerMinute
	float Volume
	int BeatsPerMeasure
	overwrite void Reset()
		Volume = 0.3
		BeatsPerMinute = 90
		BeatsPerMeasure = 4
	overwrite void UpdateDialog()
		dlg.SetFloat("beats_per_minute", BeatsPerMinute)
		dlg.SetInt("beats_per_measure", BeatsPerMeasure)
		dlg.SetFloat("volume", Volume * 100)
		//SliderSet(dlg, "volume", Volume)
	overwrite void DataFromDialog()
		BeatsPerMinute = dlg.GetFloat("")
		BeatsPerMeasure = dlg.GetInt("")
		Volume = dlg.GetFloat("") / 100
		//Volume = SliderGet(dlg, "volume")
	overwrite void Configure()
		// dialog
		dlg = new FixedDialog("Metronom",305,135,MainWin,false)
		dlg.AddText("Geschwindigkeit:",5,5,120,25,"")
		dlg.AddSpinButton("\\0\\1000\\0.1",130,5,140,25,"beats_per_minute")
		dlg.AddText("/min",275,5,30,25,"")
		dlg.AddText("Schläge pro Takt:",5,35,130,25,"")
		dlg.AddSpinButton("\\1\\32\\1",130,35,140,25,"beats_per_measure")
		dlg.AddText("Lautstärke:",5,65,120,25,"")
		dlg.AddSpinButton("\\0\\100\\0.1",130,65,140,25,"volume")
		dlg.AddText("%",275,65,30,25,"")
		PutCommandBarFixed(dlg, 5, 100, 305)

		dlg.SetDecimals(1)
	
		UpdateDialog()

		dlg.Run()



class MetronomeState : PluginState
	int beat
	int dpos
	overwrite void Reset()
		beat = 0
		dpos = 0

DummySynthesizer synth

class Metronome : Plugin
	MetronomeData data
	MetronomeState state

	overwrite void ProcessTrack(BufferBox buf)
		AudioFile *a = audio

		float dt_m = 60.0 / data.BeatsPerMinute
		int sm_m = dt_m * a.sample_rate
	
		synth.sample_rate = a.sample_rate

		while true
			if state.beat == 0
				synth.RenderMetronomeClick(buf, state.dpos, 0, data.Volume)
			else
				synth.RenderMetronomeClick(buf, state.dpos, 1, data.Volume)
		
			state.beat ++
			if state.beat >= data.BeatsPerMeasure
				state.beat = 0
			state.dpos += sm_m
			if state.dpos >= buf.num
				state.dpos -= buf.num
				break

