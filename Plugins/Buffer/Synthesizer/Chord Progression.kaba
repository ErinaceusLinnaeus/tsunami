// Image = hui:add
// Title[Deutsch] = Akkordfolge

use "../../api.kaba"
use "../../tone.kaba"


class PluginConfig : PluginData
	string Chords
	float Volume
	bool DurationByBeats
	float Duration
	int Beats

	overwrite void reset()
		Volume = 0.2
		Chords = "aeFa"
		DurationByBeats = false
		Duration = 2.0
		Beats = 1


class ChordProgression : AudioEffect
	PluginConfig config
	DummySynthesizer synth

	overwrite void process(BufferBox buf)
		Chord[] chord
		AudioFile *a = audio
		ParseChords(config.Chords, chord)
	
		int p0 = a.getNextBeat(buf.offset)
		synth.sample_rate = a.sample_rate
	
		for int i, 0, chord.num
			int pos0 = f2i(a.sample_rate * config.Duration * i2f(i))
			int pos1 = f2i(a.sample_rate * config.Duration * i2f(i + 1))
			if config.DurationByBeats
				pos0 = p0 - buf.offset
				for int j, 0, config.Beats
					p0 = a.getNextBeat(p0)
				pos1 = p0 - buf.offset
			AddChord(synth, buf, pos0, pos1, chord[i], config.Volume)

	overwrite ConfigPanel *createPanel()
		return new ChordProgPanel(self)

class ChordProgPanel : ConfigPanel
	overwrite ChordProgression *c
	void __init__(ChordProgression *_c)
		super.__init__(_c)
		addGrid("", 0, 0, 4, 4, "table2")
		setTarget("table2", 0)
		addText("Akkorde:", 0, 0, 0, 0, "")
		addEdit("", 1, 0, 0, 0, "chords")
		addText("Lautstärke:", 0, 1, 0, 0, "")
		addSlider("", 1, 1, 0, 0, "volume_slider")
		addSpinButton("\\0\\100\\0.1", 2, 1, 0, 0, "volume")
		addText("%", 3, 1, 0, 0, "")
		addText("Dauer:", 0, 2, 0, 0, "")
		addRadioButton("Sekunden", 1, 2, 0, 0, "duration_type:time")
		addSpinButton("\\0\\100\\0.01", 2, 2, 0, 0, "duration")
		addRadioButton("Schläge", 1, 3, 0, 0, "duration_type:beats")
		addSpinButton("\\1\\100\\1", 2, 3, 0, 0, "beats")
	
		CreateSliderM(self, "volume_slider", "volume", 0, 1, 100, &onVolume, c.config.Volume)
		event("chords", &onChords)
		event("duration_type:beats", &onDurationTypeBeats)
		event("duration_type:time", &onDurationTypeTime)
		event("duration", &onDuration)
		event("beats", &onBeats)

		update()
	
	overwrite void update()
		setString("chords", c.config.Chords)
		SliderSet(self, "volume", c.config.Volume)
		check("duration_by_beats", c.config.DurationByBeats)
		setFloat("duration", c.config.Duration)
		setInt("beats", c.config.Beats)
		enable("duration", !c.config.DurationByBeats)
		enable("beats", c.config.DurationByBeats)

	void onChords()
		c.config.Chords = getString("")
		notify()

	void onVolume()
		c.config.Volume = SliderGet(self, "volume")
		notify()

	void onDurationTypeBeats()
		c.config.DurationByBeats = true
		enable("duration", false)
		enable("beats", true)
		notify()

	void onDurationTypeTime()
		c.config.DurationByBeats = false
		enable("duration", true)
		enable("beats", false)
		notify()

	void onDuration()
		c.config.Duration = getFloat("")
		notify()

	void onBeats()
		c.config.Beats = getInt("")
		notify()

