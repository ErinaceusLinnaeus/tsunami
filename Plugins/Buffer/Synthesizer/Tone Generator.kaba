// Image = hui:add
// Title[Deutsch] = Sinus Generator

use "../../api.kaba"
use "../../tone.kaba"


class PluginData
	int Pitch
	float Frequency
	float Volume

PluginData data

DummySynthesizer synth

window dlg

void ProcessTrack(BufferBox buf)
	AudioFile *a = audio
	synth.sample_rate = a.sample_rate
	Range r
	r.offset = 0
	r.length = buf.num
	synth.AddTone(buf, r, freq_to_pitch(data.Frequency), data.Volume)

	/*float f = data.Frequency

	float w_f = 1.0 / a.sample_rate * f * 2.0 * pi

	for int i, 0, buf.num
		float tt = i * w_f
		float d = sin(tt) * data.Volume
		buf.r[i] = clamp(buf.r[i] + d, -1, 1)
		buf.l[i] = clamp(buf.l[i] + d, -1, 1)*/

void OnFrequency()
	data.Pitch = -1
	data.Frequency = dlg.GetFloat("")

void ReadPitchFromDialog()
	data.Pitch = pitch_from_octave_and_rel(dlg.GetInt("pitch_rel"),
	                                       dlg.GetInt("octave"))

void OnPitch()
	ReadPitchFromDialog()
	data.Frequency = pitch_to_freq(data.Pitch)
	dlg.SetFloat("frequency", data.Frequency)

void OnVolume()
	data.Volume = SliderGet(dlg, "volume")

void DataToDialog()
	bool by_pitch = data.Pitch >= 0
	if by_pitch
		dlg.SetInt("pitch_rel", data.Pitch % 12)
		dlg.SetInt("octave", pitch_get_octave(data.Pitch))
		dlg.Check("type:pitch", true)
	else
		dlg.Check("type:freq", true)
	dlg.SetFloat("frequency", data.Frequency)
	SliderSet(dlg, "volume", data.Volume)
	
	dlg.Enable("frequency", !by_pitch)
	dlg.Enable("octave", by_pitch)
	dlg.Enable("pitch_rel", by_pitch)

void OnTypeFreq()
	data.Pitch = -1
	DataToDialog()

void OnTypePitch()
	ReadPitchFromDialog()
	data.Frequency = pitch_to_freq(data.Pitch)
	DataToDialog()

void ResetData()
	data.Pitch = 81
	data.Volume = 0.3
	data.Frequency = pitch_to_freq(data.Pitch)

void Configure()
	// dialog
	dlg = new FixedDialog("Ton Generator",420,135,MainWin,false)
	dlg.AddRadioButton("Ton",5,5,100,25,"type:pitch")
	dlg.AddComboBox("", 110, 5, 120, 25, "pitch_rel")
	dlg.AddSpinButton("\\0\\8",235,5,150,25,"octave")
	dlg.AddRadioButton("Frequenz",5,35,100,25,"type:freq")
	dlg.AddSpinButton("\\0\\100000\\0.1",110,35,275,25,"frequency")
	dlg.AddText("Hz",390,35,20,25,"")
	dlg.AddText("Lautst√§rke:",5,65,100,25,"")
	dlg.AddSlider("",110,65,150,25,"volume_slider")
	dlg.AddSpinButton("\\0\\100\\0.1",265,65,120,25,"volume")
	dlg.AddText("%",390,65,20,25,"")
	PutCommandBarFixed(dlg, 5, 100, 420)
	
	dlg.Reset("pitch_rel")
	for int i, 0, 12
		dlg.SetString("pitch_rel", rel_pitch_name(i))
	
	AddSlider(dlg, "volume_slider", "volume", 0, 1, 100, &OnVolume, data.Volume)
	dlg.Event("pitch_rel", &OnPitch)
	dlg.Event("octave", &OnPitch)
	dlg.Event("frequency", &OnFrequency)
	dlg.Event("type:freq", &OnTypeFreq)
	dlg.Event("type:pitch", &OnTypePitch)

	dlg.SetDecimals(1)
	DataToDialog()
	
	dlg.Run()

