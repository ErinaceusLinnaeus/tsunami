use "../api.kaba"

const string AUTO_CONFIG_PITCH = "0:127:1:1:"
const string AUTO_CONFIG_TEXT = ""
const string AUTO_CONFIG_BEAT_PARTITION = "1:8"

void append(int[] a, int[] b)
	for x in b
		a.add(x)

int[] morse(string str)
	int[] l
	for c in str
		if c == 'a'
			append(l, [1, 2])
		if c == 'b'
			append(l, [2, 1, 1, 1])
		if c == 'c'
			append(l, [2,1,2,1])
		if c == 'd'
			append(l, [2,1,1])
		if c == 'e'
			append(l, [1])
		if c == 'f'
			append(l, [1,1,2,1])
		if c == 'g'
			append(l, [2,2,1])
		if c == 'h'
			append(l, [1,1,1,1])
		if c == 'i'
			append(l, [1,1])
		if c == 'j'
			append(l, [1,2,2,2])
		if c == 'k'
			append(l, [2,1,2])
		if c == 'l'
			append(l, [1,2,1,1])
		if c == 'm'
			append(l, [2,2])
		if c == 'n'
			append(l, [2,1])
		if c == 'o'
			append(l, [2,2,2])
		if c == 'p'
			append(l, [1,2,2,1])
		if c == 'q'
			append(l, [2,2,1,2])
		if c == 'r'
			append(l, [1,2,1])
		if c == 's'
			append(l, [1,1,1])
		if c == 't'
			append(l, [2])
		if c == 'u'
			append(l, [1,1,2])
		if c == 'v'
			append(l, [1,1,1,2])
		if c == 'w'
			append(l, [1,2,2])
		if c == 'x'
			append(l, [2,1,1,2])
		if c == 'y'
			append(l, [2,1,2,2])
		if c == 'z'
			append(l, [2,2,1,1])
	return l


class Config extends Module.Config
	float pitch
	string text
	int beat_partition
	
	override void reset()
		pitch = 60
		text = "test"
		beat_partition = 2

class Morse extends MidiSource
	Config config
	bool first
	
	override void reset_state()
		first = true
	
	override int read(MidiEventBuffer midi)
		if first
			bh_midi = &midi
			int[] l = morse(config.text)
			for ll in l
				note_x(config.pitch, 1, 0, ll, config.beat_partition)
				skip_x(0, 1, config.beat_partition)
			first = false
		return midi.samples
