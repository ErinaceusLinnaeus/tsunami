# Image = hui:clear
# Title[Deutsch] = Klicks Entfernen
use tsunami.*

const MAX_CLICK_SAMPLES = 128
const CLICK_ABS_THRESHOLD = 0.8
const CLICK_DIFF_THRESHOLD = 0.4

func click_start(last: float, cur: float) -> bool
	return abs(cur) > CLICK_ABS_THRESHOLD and abs(cur - last) > CLICK_DIFF_THRESHOLD

func click_end(last: float, cur: float) -> bool
	return abs(cur) < CLICK_ABS_THRESHOLD and abs(cur - last) > CLICK_DIFF_THRESHOLD

func find_clicks(b: float[]) -> int[]
	var clicks: int[]
	for i in 1:len(b)-1
		if click_start(b[i-1], b[i])
			clicks.add(i)
			var j1 = min(len(b), i + MAX_CLICK_SAMPLES)
			for j in i:j1
				if click_end(b[j-1], b[j])
					i = j
					clicks.add(i)
					break
	
	for i in 0:len(clicks)-2:2
		if clicks[i+2] - clicks[i+1] < 8
			clicks.remove(i+2)
			clicks.remove(i+1)
			i -= 2
	print(clicks)
	return clicks

class RemoveClicks extends AudioEffect
	func unclick(out b: float[], start: int, end: int)
		var i0 = start - 1
		var i1 = end + 1
		var v0 = b[i0]
		var v1 = b[i1]
		var m = (v1 - v0) / (i1 - i0)
		for i in i0:i1
			b[i] = v0 + m * (i - i0)
		
	
	func repair(out b: float[])
		var clicks = find_clicks(b)
		for i in 0:len(clicks):2
			unclick(b, clicks[i], clicks[i+1])

	func override process(out buf: AudioBuffer)
		for c in buf.c
			repair(c)
