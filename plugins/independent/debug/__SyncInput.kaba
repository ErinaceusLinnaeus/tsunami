use hui
use tsunami.*

var dlg: hui.Window*

const SAMPLE_RATE = 44100
const offset_out = 20000
var offset_in: int
var offset: int

var synth: DummySynthesizer

func fill(out buf: AudioBuffer)
	buf.c[0] = 0
	buf.c[1] = 0
	
	if offset == 0
		synth.add_metronome_click(offset_out, 1, 0, 880)
		synth.read(buf)

func sync()
	var found = false
	for i in 0:len(input.cur_buf)
		if abs(input.cur_buf.r[i]) > 0.1
			offset_in += i
			var offset_in: print
			found = true
			break
	if found
		var dlg: delete
	else
		offset_in += len(input.cur_buf)

func main()
	synth.sample_rate = SAMPLE_RATE
	
	dlg = new Dialog("Sync", 200, 80, MainWin, false)
	dlg.addLabel("Sync...", 0, 0, "")
	offset_in = 0
	
	input.addObserver(nil, &sync)
	output.playGenerated(&fill, SAMPLE_RATE)
	input.start(TRACK_TYPE_AUDIO, SAMPLE_RATE)
	
	dlg.run()

	offset = 0	
	input.RemoveObserver(nil)
	output.Stop()
	input.Stop()
