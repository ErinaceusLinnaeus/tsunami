use hui
use tsunami
use AudioVisualizer.Shader

enum Mode
	FORWARD
	LOOP

func get_part(s: Song, offset: int) -> TrackMarker*
	var tt = s.time_track()
	for t in tt
		for m in t.layers[0].markers
			if m.range.inside(offset)
				return weak(m)
	return nil



class PPPanel extends ConfigPanel
	var looper: Looper&
	
	func __init__(l: Looper)
		super.__init__(l)
		from_source("
Button forward 'Forward' expandx expandy")
		looper := &l

		event("forward", on_forward)
	
	func mut on_forward()
		looper.go_forward()
		

class Looper extends TsunamiPlugin
	var runner: int
	var mode: Mode
	var chain: shared![SignalChain]
	var renderer: shared![SongRenderer]
	var song: shared![Song]
	var cur_part: TrackMarker*
	var shader_vis: shared![ShaderVis]
	var shader_panel: shared![ShaderPanel]
	var shader_win: owned![Dialog]
	
	func override on_start()
		cur_part = nil
		song = session.song
		chain = session.playback.signal_chain
		renderer = session.playback.renderer
		runner = hui.run_repeated(0.05, on_update)
		mode = Mode.FORWARD
		
		shader_vis = chain.add[ShaderVis]()
		chain.connect(renderer, 0, shader_vis, 0)
		chain.connect(shader_vis, 0, session.playback.output_stream, 0) # almost ...
		
		shader_win = new Dialog("Shader", 800, 800, session.win, true)
		shader_panel = shader_vis.create_panel() as xfer[ShaderPanel]
		shader_win.embed(shader_panel, "", 0,0)
		shader_win.show()
		
		
	func override on_stop()
		print("stop 1")
		#del shader_panel
		print("stop 2")
		#del shader_win
		print("stop 3")
		#del shader_vis
		hui.cancel_runner(runner)
			
	func override create_panel() -> xfer[ConfigPanel]
		return new PPPanel(self)
	
	func on_leave_part(p: TrackMarker)
		print("leaving " + p.text)
		#go_forward
	func mut on_enter_part(p: TrackMarker)
		print("entering " + p.text)
		renderer.set_range(p.range)
		renderer.set_loop(true)
		mode = Mode.LOOP
	func mut go_forward()
		renderer.set_range(song.range())
		renderer.set_loop(false)
		mode = Mode.FORWARD
	
	func mut on_update()
		let pos = renderer.get_pos()
		var p = get_part(song, pos)
		if p != cur_part
			for c in cur_part
				on_leave_part(c)
			cur_part = p
			for c in cur_part
				on_enter_part(c)
